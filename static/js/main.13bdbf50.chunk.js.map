{"version":3,"sources":["components/Header/Header.module.scss","containers/RepositoryList/RepositoryList.module.scss","components/List/List.tsx","components/Repository/PlaceHolderRepository.tsx","components/Repository/Repository.tsx","containers/RepositoryList/RepositoryList.graphql.ts","containers/RepositoryList/RepositoryList.tsx","helpers/useLoadMore.ts","helpers/useInfiniteScroll.ts","svg/Toys.tsx","components/Header/Header.tsx","components/App/App.tsx","serviceWorker.ts","index.tsx","components/Repository/Repository.module.scss"],"names":["module","exports","List","entries","children","render","component","renderComponent","props","map","value","PlaceHolderRepository","className","style","Repository","Placeholder","dayjs","extend","relativeTime","PlaceHolder","id","url","name","createdAt","description","owner","avatarUrl","login","starCount","stargazers","totalCount","issueCount","issues","href","key","Avatar","src","alt","Info","Name","Description","Footer","fromNow","REPOSITORIES_QUERY","gql","RepositoryList","now","Date","query","setMonth","getMonth","format","useQuery","variables","cursor","data","loading","fetchMore","search","pageInfo","endCursor","hasNextPage","onLoadMore","propertyName","useCallback","a","updateQuery","previousResult","fetchMoreResult","newEdges","edges","length","__typename","useLoadMore","callback","useState","isFetching","setIsFetching","savedCallback","useRef","useEffect","current","finally","handler","window","innerHeight","pageYOffset","document","body","offsetHeight","addEventListener","removeEventListener","useInfiteScroll","Container","onClick","node","Toys","width","height","viewBox","fill","xmlns","d","stroke","stroke-miterlimit","Header","AppHeader","AppTitle","client","ApolloClient","link","HttpLink","uri","headers","Authorization","process","cache","InMemoryCache","App","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.13bdbf50.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__21wXn\",\"AppHeader\":\"Header_AppHeader__1safz\",\"AppTitle\":\"Header_AppTitle__2L2j7\",\"Toys\":\"Header_Toys__3n7FU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RepositoryList_container__aQlsb\",\"Container\":\"RepositoryList_Container__3uFAX\"};","import React from \"react\";\nimport { IListProps } from \"../../types/ListProps\";\n\n// Use Render Props for Cross-Cutting Concerns\nfunction List<T> ({ entries, children, render, component }: IListProps<T>) {\n  const renderComponent = children || render || component || ((props: T) => <div />);\n  return <>{entries.map((value: T) => renderComponent(value))}</>;\n}\n\nexport default List;\n","import React from \"react\";\n\nimport style from \"./Repository.module.scss\";\n\nconst PlaceHolderRepository = () => {\n  return (\n    <div className={style.Repository}>\n      <div className={`ui placeholder ${style.Placeholder}`}>\n        <div className=\"image header\">\n          <div className=\"line\" />\n          <div className=\"medium line\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PlaceHolderRepository;\n","import dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport React from \"react\";\n\nimport { IRepository } from \"../../types/Repository\";\nimport PlaceHolder from \"./PlaceHolderRepository\";\n\nimport style from \"./Repository.module.scss\";\n\ndayjs.extend(relativeTime);\n\nexport const Repository = (props: IRepository) => {\n  const {\n    id,\n    url,\n    name,\n    createdAt,\n    description,\n    owner: { avatarUrl, login },\n    stargazers: { totalCount: starCount },\n    issues: { totalCount: issueCount },\n  } = props;\n  return (\n    <a href={url} key={id} className={style.Repository}>\n      <img className={style.Avatar} src={avatarUrl} alt={login} />\n      <div className={style.Info}>\n        <h4 className={style.Name}>{name}</h4>\n        <p className={style.Description}>{description}</p>\n        <div className={style.Footer}>\n          <span>{starCount} (Star) </span>\n          <span>{issueCount} (Issues) </span>\n          <span>{dayjs(createdAt).fromNow(true)}</span>\n        </div>\n      </div>\n    </a>\n  );\n};\n\nexport const PlaceHolderRepository = PlaceHolder;\n\nexport default Repository;\n","import gql from \"graphql-tag\";\n\nconst REPOSITORIES_QUERY = gql`\n  query Repositories($query: String!, $cursor: String) {\n    search(query: $query, type: REPOSITORY, first: 20, after: $cursor) {\n      edges {\n        node {\n          ... on Repository {\n            id\n            owner {\n              avatarUrl\n              login\n            }\n            url\n            name\n            description\n            createdAt\n            stargazers {\n              totalCount\n            }\n            issues {\n              totalCount\n            }\n          }\n          __typename\n        }\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n`;\n\nexport default REPOSITORIES_QUERY;\n","import dayjs from \"dayjs\";\nimport React from \"react\";\nimport Repositories from \"../../components/List\";\nimport Repository, { PlaceHolderRepository } from \"../../components/Repository\";\n\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { useInfiteScroll } from \"../../helpers/useInfiniteScroll\";\nimport { useLoadMore } from \"../../helpers/useLoadMore\";\n\nimport REPOSITORIES_QUERY from \"./RepositoryList.graphql\";\nimport style from \"./RepositoryList.module.scss\";\n\nconst RepositoryList = () => {\n  const now = new Date();\n  const query = `created:>${dayjs(now.setMonth(now.getMonth() - 1)).format(\"YYYY-MM-DD\")}`;\n  const { data, loading, fetchMore } = useQuery(REPOSITORIES_QUERY, {\n    variables: {\n      query,\n      cursor: null,\n    },\n  });\n\n  const { endCursor, hasNextPage } = data ? data.search.pageInfo : { endCursor: null, hasNextPage: true };\n\n  const onLoadMore = useLoadMore(fetchMore, \"search\", { query, cursor: endCursor }, hasNextPage);\n  const [isFetching] = useInfiteScroll(onLoadMore);\n\n  return (\n    <div className={style.Container} onClick={onLoadMore}>\n      {loading || !data ? (\n        <PlaceHolderRepository />\n      ) : (\n        <Repositories render={Repository} entries={data.search.edges.map(({ node }: any) => node) || []} />\n      )}\n      {isFetching && <PlaceHolderRepository />}\n    </div>\n  );\n};\n\nexport default RepositoryList;\n","import { useCallback } from \"react\";\n\nexport const useLoadMore = (\n  fetchMore: (props: any) => any,\n  propertyName: string,\n  variables: any,\n  hasNextPage: boolean,\n) =>\n  useCallback(\n    async () =>\n      !hasNextPage\n        ? false\n        : fetchMore({\n            variables,\n            updateQuery: (previousResult: any, { fetchMoreResult }: any) => {\n              const newEdges = fetchMoreResult[propertyName].edges;\n              const pageInfo = fetchMoreResult[propertyName].pageInfo;\n\n              return newEdges.length\n                ? {\n                    // Put the new comments at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    search: {\n                      __typename: previousResult[propertyName].__typename,\n                      edges: [...previousResult[propertyName].edges, ...newEdges],\n                      pageInfo,\n                    },\n                  }\n                : previousResult;\n            },\n          }),\n    [fetchMore, propertyName, variables, hasNextPage],\n  );\n","import { Dispatch, SetStateAction, useEffect, useRef, useState } from \"react\";\n\nexport const useInfiteScroll = (callback: () => Promise<any>): [boolean, Dispatch<SetStateAction<boolean>>] => {\n  const [isFetching, setIsFetching] = useState(false);\n  const savedCallback = useRef<() => Promise<any>>(callback);\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n\n  useEffect(() => {\n    if (isFetching) {\n      savedCallback.current().finally(() => setIsFetching(false));\n    }\n  }, [isFetching]);\n\n  useEffect(() => {\n    function handler () {\n      if (isFetching || window.innerHeight + window.pageYOffset < document.body.offsetHeight) {\n        return;\n      }\n      setIsFetching(true);\n    }\n    window.addEventListener(\"scroll\", handler);\n    return () => {\n      window.removeEventListener(\"scroll\", handler);\n    };\n  }, []);\n  return [isFetching, setIsFetching];\n};\n","import * as React from \"react\";\nimport { SVGAttributes } from \"react\";\n\nexport const Toys = (props: SVGAttributes<any>) => (\n  <svg width=\"443\" height=\"390\" viewBox=\"0 0 443 390\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n    <path d=\"M279.215 227.657L246.013 218.046L270.936 194.094L279.215 227.657Z\" fill=\"#FFFA48\" />\n    <path d=\"M73.5953 67.6398L66.7875 101.517L40.8429 78.719L73.5953 67.6398Z\" fill=\"#1A237E\" />\n    <path\n      d=\"M233.603 332.634L222.278 328.138L225.284 316.306L213.959 311.811L216.965 299.979L205.64 295.484L208.66\n     283.679L197.32 279.156L200.34 267.352L189.001 262.829L192.021 251.025\"\n      stroke=\"#FFFA48\"\n      stroke-miterlimit=\"10\"\n    />\n    <path\n      d=\"M271.189 159.888L282.995 162.904L287.495 151.58L299.329 154.581L303.83 143.257L315.664 146.258L319.653\n       136.217L322.573 137.376L317.562 149.983L305.742 147.01L301.227 158.306L289.407 155.333L284.893 166.628L273.101\n        163.641L268.558 174.951L256.766 171.964L252.252 183.26L239.079 179.918L239.858 176.875L250.354 179.535L254.854\n         168.211L266.661 171.226L271.189 159.888Z\"\n      fill=\"#F96985\"\n    />\n    <path d=\"M88.3009 19.9253L107.139 26.0417L108.597 21.557L89.7591 15.4406L88.3009 19.9253Z\" fill=\"#F96985\" />\n    <path d=\"M209.163 80.2675L213.861 79.8418L212.079 60.119L207.382 60.5447L209.163 80.2675Z\" fill=\"#F96985\" />\n    <path d=\"M128.325 233.735L147.979 236.2L148.567 231.521L128.913 229.056L128.325 233.735Z\" fill=\"#1A237E\" />\n    <path\n      d=\"M406.657 113.864C405.672 111.931 403.306 111.162 401.371 112.148C399.437 113.133 398.668 115.5 399.653\n       117.433C400.638 119.366 403.005 120.135 404.939 119.149C406.873 118.164 407.643 115.797 406.657 113.864Z\"\n      fill=\"#FFFA48\"\n    />\n    <path\n      d=\"M172.465 382.34C171.48 380.407 169.113 379.639 167.179 380.624C165.245 381.61 164.475 383.976 165.46\n       385.909C166.445 387.843 168.812 388.611 170.746 387.626C172.681 386.64 173.45 384.274 172.465 382.34Z\"\n      fill=\"#F96985\"\n    />\n    <path\n      d=\"M132.333 158.745C131.348 156.812 128.981 156.044 127.047 157.029C125.113 158.015 124.343 160.381\n     125.328 162.314C126.313 164.248 128.68 165.016 130.614 164.031C132.549 163.045 133.318 160.679 132.333 158.745Z\"\n      fill=\"#FFFA48\"\n    />\n    <path\n      d=\"M352.757 210.469C351.772 208.536 349.406 207.768 347.471 208.753C345.537 209.739 344.768 212.105 345.753\n       214.038C346.738 215.972 349.105 216.74 351.039 215.755C352.973 214.769 353.743 212.403 352.757 210.469Z\"\n      fill=\"#FFFA48\"\n    />\n    <path\n      d=\"M386.892 124.041C384.687 119.714 384.292 114.689 385.794 110.07C387.296 105.451 390.571 101.617 394.9\n    99.412C399.228 97.2065 404.255 96.8101 408.875 98.31C413.494 99.8098 417.328 103.083 419.532 107.41L413.929\n     110.265C412.851 108.149 411.169 106.4 409.097 105.24C407.024 104.08 404.654 103.561 402.286 103.747C399.918\n      103.934 397.658 104.819 395.792 106.289C393.926 107.76 392.538 109.751 391.804 112.01C391.069 114.268 391.021\n       116.694 391.665 118.98C392.31 121.265 393.618 123.308 395.424 124.851C397.23 126.393 399.453 127.365 401.812\n        127.643C404.171 127.922 406.56 127.495 408.677 126.416L411.531 132.018C407.204 134.223 402.179 134.621 397.559\n         133.125C392.94 131.63 389.103 128.363 386.892 124.041V124.041Z\"\n      fill=\"#F96985\"\n    />\n  </svg>\n);\n","import React from \"react\";\nimport { Toys } from \"../../svg/Toys\";\n\nimport style from \"./Header.module.scss\";\n\nconst Header: React.FC = () => (\n  <header className={style.AppHeader}>\n    <h1 className={style.AppTitle}>Explore.</h1>\n    <Toys className={style.Toys} />\n  </header>\n);\n\nexport default Header;\n","import { ApolloProvider } from \"@apollo/react-hooks\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { ApolloClient } from \"apollo-client\";\nimport { HttpLink } from \"apollo-link-http\";\nimport React from \"react\";\nimport RepositoryList from \"../../containers/RepositoryList/RepositoryList\";\nimport Header from \"../Header\";\n\nconst client = new ApolloClient({\n  link: new HttpLink({\n    uri: \"https://api.github.com/graphql\",\n    headers: {\n      Authorization: `bearer ${process.env.REACT_APP_TOKEN}`,\n    },\n  }),\n  cache: new InMemoryCache(),\n});\n\nconst App: React.FC = () => (\n  <ApolloProvider client={client}>\n    <div>\n      <Header />\n      <RepositoryList />\n    </div>\n  </ApolloProvider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./assets/styles/normalize.css\";\nimport \"./assets/styles/placeholder.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Repository_container__2rSFP\",\"ellipsis\":\"Repository_ellipsis__1ujwq\",\"Name\":\"Repository_Name__1_5s2\",\"Description\":\"Repository_Description__35nF-\",\"Repository\":\"Repository_Repository__1D0YJ\",\"Avatar\":\"Repository_Avatar__1njJH\",\"Info\":\"Repository_Info__17Meb\",\"Footer\":\"Repository_Footer__2WkB6\",\"Placeholder\":\"Repository_Placeholder__L4gRB\"};"],"sourceRoot":""}